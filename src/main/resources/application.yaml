spring:
  profiles:
    active:
      - local
  servlet:
    multipart:
      max-file-size: 10MB       # 업로드 단일 파일 최대 크기
      max-request-size: 20MB    # 요청 전체(여러 파일 포함) 최대 크기

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
            scope:
              - profile_nickname
              - profile_image
              - account_email
            redirect-uri: "{baseUrl}/oauth2/callback/kakao"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
            redirect-uri: "{baseUrl}/oauth2/callback/google"
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    properties:
      security.protocol: SASL_SSL
      sasl.mechanism: PLAIN
      sasl.jaas.config: >
        org.apache.kafka.common.security.plain.PlainLoginModule required
        username="${KAFKA_API_KEY}"
        password="${KAFKA_API_SECRET}";
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: otboo-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
otboo:
  jwt:
    access-token:
      secret: ${JWT_ACCESS_SECRET}
      expiration-ms: ${JWT_ACCESS_EXPIRATION_MS:3600000} # 60 minutes
    refresh-token:
      secret: ${JWT_REFRESH_SECRET}
      expiration-ms: ${JWT_REFRESH_EXPIRATION_MS:604800000} # 7 days

sse:
  timeout: 300_000
  event-queue-capacity: 100

external:
  kma:
    base-url: "https://apis.data.go.kr/1360000/VilageFcstInfoService_2.0"
    service-key: "${KMA_SERVICE_KEY_ENC}"
    timeout-ms: 5000
  kakao:
    base-url: "https://dapi.kakao.com"
    rest-api-key: "${API_KAKAO_KEY}"

weather:
  batch:
    enabled: true
    cron: "0 0/30 * * * *"

openai:
  base-url: https://api.openai.com/v1
  model: gpt-4o-mini
  api-key: ${OPENAI_API_KEY}
  timeout-ms: 8000